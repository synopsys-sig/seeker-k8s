apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-server
  namespace: {{ .Release.Namespace }}
  labels:
    {{- include "seeker.labels" . | nindent 4 }}
    component: server
spec:
  replicas: {{ .Values.replicaCount }}
  strategy:
    type: {{ .Values.updateStrategy }}
  selector:
    matchLabels:
      app: seeker-server
  template:
    metadata:
      labels:
        app: seeker-server
    spec:
      {{- if .Values.imagePullSecrets }}
      imagePullSecrets:
        - name: {{ .Values.imagePullSecrets }}
      {{- end }}
      initContainers:
        - name: wait-for-database
          image: busybox:stable
          command: ['sh', '-c', 'until nc -vz -w 1 {{ .Values.externalDatabaseHost | default "seeker-postgres-service" | quote }} {{ .Values.externalDatabasePort | default "5432" | quote }}; do echo "Waiting for database service"; sleep 5; done;']
      containers:
        - name: seeker-server
          image: {{ .Values.registry }}/{{ .Values.server.image }}:{{ .Values.imageTag }}
          imagePullPolicy: {{ .Values.pullPolicy }}
          env:
            - name: SEEKER_SERVER_HTTP_PORT
              value: "8082"
            - name: SEEKER_SERVER_JAVA_OPTS
              value: {{ .Values.server.xmx | quote }}
            - name: SEEKER_BIND_HOST
              value: "0.0.0.0"
            {{- include "seeker.db.env.vars" . | nindent 12 }}
          ports:
            - containerPort: 8082
          resources:
            {{- toYaml .Values.server.resources | nindent 12 }}
          volumeMounts:
            - name: dbpass
              mountPath: "/opt/seeker/secrets"
              readOnly: true
      volumes:
        - name: dbpass
          secret:
            secretName: {{ .Values.externalDatabasePasswordSecret }}
      securityContext:
        {{- toYaml .Values.securityContext | nindent 8}}
---
apiVersion: v1
kind: Service
metadata:
  name: seeker-server-service
  namespace: seeker
spec:
  type: ClusterIP
  selector:
    app: seeker-server
  ports:
    - name: "http"
      protocol: TCP
      port: 8082
      targetPort: 8082
